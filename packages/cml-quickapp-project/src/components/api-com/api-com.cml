<template>
  <view class="api-com" ref="refTest">
    <text class="btn" c-bind:tap="showAlert">Alert & showToast</text>
    <text class="btn" c-bind:tap="setTitle">setTitle</text>
    <text class="btn" c-bind:tap="showComfirm">Confirm & showToast</text>
    <text class="btn" c-bind:tap="chooseImg">chooseImg</text>
    <text class="btn" c-bind:tap="close">close</text>
    <text class="btn" c-bind:tap="animate">animation</text>
    <text class="btn" c-bind:tap="setStorage">setStorage</text>
    <text class="btn" c-bind:tap="getStorage">getStorage</text>
    <text class="btn" c-bind:tap="removeStorage">removeStorage</text>
    <text class="btn" c-bind:tap="clipBoard">ClipBoard</text>
    <text class="btn" c-bind:tap="redirect">redirect</text>
    <text class="btn" c-bind:tap="getSystemInfo">getSystemInfo</text>
    <text class="btn" c-bind:tap="lunchOptionsSync">getLaunchOptionsSync</text>
    <text class="btn" c-bind:tap="getRect">getRect</text>
    <text class="btn" c-bind:tap="px2cpx_and_cpx2px">px2cpx_and_cpx2px</text>
    <text class="btn" c-bind:tap="initSocket">initSocket</text>
    <text class="btn" c-bind:tap="getLocationInfo">getLocationInfo</text>
    <text class="btn" c-bind:tap="request">request</text>

    <!-- <view class="block" animation="{{animationData}}" c-bind:tap="animate">
      <text>请点击我</text>
    </view> -->
  </view>
</template>

<script>
  import cml from "cml-quickapp-api";
  class ApiCom {
    data = {
      animationData: null
    };
    methods = {
      showAlert: function (event) {
        cml.alert({
          message: 'This is alert! ',
          confirmTitle: "ok"
        }).then(function () {
          cml.showToast({
            message: 'success!',
            duration: 1000
          })
        })
      },
      setTitle: function () {
        cml.setTitle('我是标题')
      },
      showComfirm: function () {
        cml.confirm({
          message: 'Do you confirm?',
          confirmTitle: "ok",
          cancelTitle: "cancel"
        }).then(function (value) {
          cml.showToast({
            message: "用户点击了" + value,
            duration: 1000
          })
        })
      },

      chooseImg: function () {
        cml.chooseImage({
          type: 'album'
          // Todo
          // 仅支持camera和album，不支持choice类型
        }).then((res) => {
          console.log(res)
          // 接下来可以进行上传到服务器等操作
        })
      },

      close: function () {
        cml.close();
      },

      animate: function () {
        // Todo
        // let animate = cml.createAnimation()

        // this.animate = animate
        // this.animate
        //   .backgroundColor('red');
        // this.animate
        //   .scaleX(2)
        //   .step({
        //     duration: 5000
        //   });

        // this.setData({
        //   animationData: JSON.stringify(this.animate.export())
        // });
      },

      setStorage: function () {
        cml.setStorage('name', 'Hanks').then(() => {
          cml.showToast({
            message: 'set successfully'
          })
        })
      },
      getStorage: function () {
        cml.getStorage('name').then((value) => {
          // 处理获取到的键值
          cml.showToast({
            message: value || 'storage is empty',
            duration: 1000
          })
        })
      },
      removeStorage: function () {
        cml.removeStorage('name').then(() => {
          cml.showToast({
            message: 'removed'
          })
        })
      },
      clipBoard: function () {
        cml.setClipBoardData('变态boss').then(res => {
          cml.showToast({
            message: JSON.stringify(res),
            duration: 2000
          })
        }).catch(reason => {
          cml.showToast({
            message: JSON.stringify(reason),
            duration: 2000
          })
        })

        cml.getClipBoardData().then(res => {
          console.log(res)
        })
      },
      redirect: function () {
        cml.redirectTo({
          path: '/pages/index/index'
        })

        // cml.navigateTo({
        //   path: '/pages/index/index'
        // })

        // cml.navigateBack(-1);
      },
      getSystemInfo: function () {
        cml.getSystemInfo().then(info => {
          console.log(info)
          cml.showToast({
            message: JSON.stringify(info),
            duration: 2000
          })
          // cml.navigateBack(-1);
        })
      },
      lunchOptionsSync: function () {
        let obj = cml.getLaunchOptionsSync();
        console.log('-----launch option is ', obj)
        cml.showToast({
          message: JSON.stringify(obj)
        })
      },
      getRect: function () {
        // Todo
        cml.getRect('refTest', this).then(res => {
          console.log(res)
          cml.showToast({
            message: JSON.stringify(res)
          })
        })
      },
      px2cpx_and_cpx2px: function () {
        const cpx = cml.px2cpx(100);
        const px = cml.cpx2px(100);

        cml.canIUse('showToast').then(() => {
          cml.showToast({
            message: `100px => ${cpx}cpx; 100cpx => ${px}px`
          })
        }, () => {
          console.log('不支持')
        });
      },
      initSocket: function () {
        let ws = cml.initSocket('ws://127.0.0.1:41173');

        ws.onopen(() => {
          cml.showToast({
            message: 'socket connected...',
            duration: 1000
          });
          setTimeout(() => {
            ws.send('hello cml socket');
          }, 2000);
        });

        ws.onmessage(res => {
          cml.showToast({
            message: 'receive from server: ' + res.data,
            duration: 1000
          })
          ws.send({
            keyword: 'socket传递复杂类型',
            content: 'hello cml socket',
            arr: ['test1', 12, {}]
          })
        });

        ws.onerror(err => {
          console.error('------- error = ', err)
        });

        ws.onclose(() => {
          cml.showToast({
            message: 'socket closed...'
          })
        });

        setTimeout(() => {
          ws.close();
        }, 20000);

      },
      getLocationInfo: function () {
        cml.getLocationInfo().then(res => {
          // res: { lng[number]: 40.33, lat[number]: 154.33 }
          console.log(res)
          cml.showToast({
            message: JSON.stringify(res)
          })
        })
      },
      request: function () {
        cml.request({
          url: 'http://t.weather.sojson.com/api/weather/city/101030100',
          data: {},
          method: 'GET'
        }).then(res => {
          console.log('------- res = ', res)
        }, err => {
          console.log(err)
        })

        cml.get({
          url: 'http://t.weather.sojson.com/api/weather/city/101030100'
        }).then(res => {
          console.log(res)
        }, err => {
          console.log(err)
        })

        cml.post({
          url: 'http://t.weather.sojson.com/api/weather/city/101030100',
          data: {
            a: 1
          }
        }).then(res => {
          console.log(res)
        }, err => {
          console.log(err)
        })
      }
    };
  }

  export default new ApiCom();
</script>

<style>
  .api-com {
    flex-direction: column;
    align-items: center;
  }

  .btn {
    margin-bottom: 10cpx;
    font-size: 40cpx;
    border: 1px solid;
    border-radius: 5cpx;
    width: 500cpx;
    text-align: center;
  }
</style>
<script cml-type="json">
  {
    "base": {
      "usingComponents": {}
    }
  }
</script>