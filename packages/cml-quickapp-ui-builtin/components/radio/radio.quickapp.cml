<template>
  <view class="cml-radio">
    <view class="cml-radio-wrap" c-bind:tap="changeSelect">
      <text c-if="{{position === 'right'}}" class="cml-radio-label">{{ label }}</text>
      <view class="cml-radio-select" style="{{ radioStyle }}">
        <view class="{{ radioClass }}" style="{{ radioInnerStyle }}">
        </view>
      </view>
      <text c-if="{{position === 'left'}}" class="cml-radio-label">{{ label }}</text>
    </view>
  </view>
</template>
<script>
  class Radio implements RadioInterface {
    props = {
      checked: {
        type: Boolean,
        default: false
      },
      label: {
        type: String,
        default: ''
      },
      disabled: {
        type: Boolean,
        default: false
      },
      position: {
        type: String,
        default: 'left'
      },
      groupIndex: {
        type: Number,
        default: -1
      },
      color: {
        type: String,
        default: '#fc9153'
      },
      cstyle: {
        type: String,
        default: ''
      }
    }
    data = {
      innerChecked: false
    }
    computed = {
      radioStyle() {
        let style = '';
        if (this.disabled) {
          style += 'opacity:0.5;'
        }
        if (this.position == 'right') {
          style += 'margin-left: 13px'
        } else {
          style += 'margin-right:13px;'
        }
        return style;
      },
      radioInnerStyle() {
        let style = ''
        if (this.innerChecked) {
          style += `border:10px solid ${this.color};`
        } else {
          style += `border:1px solid #ccc;`
        }

        return style;
      },
      radioClass() {
        if (this.disabled) {
          return this.innerChecked ? 'cml-radio-selected-disabled' : 'cml-radio-unselect-disabled';
        }
        return this.innerChecked ? 'cml-radio-selected' : 'cml-radio-unselect';
      }
    }

    watch = {
      checked(val) {
        this.innerChecked = val;
      }
    }

    methods = {
      changeSelect() {
        if (this.disabled) return;
        this.innerChecked = !this.innerChecked
        let value = {
          value: this.innerChecked,
          index: this.groupIndex
        }
        this.$cmlEmit('change', value);
        this.$cmlEmit('changeevent', value);
      }
    }
    mounted() {
      this.innerChecked = this.checked;
    }
  }

  export default new Radio();
</script>
<style scoped>
  @import "../../assets/css/var.less";

  .cml-radio {
    margin: 10cpx;
  }

  .cml-radio-wrap {
    padding: 11cpx 0;
    word-break: break-word;
    word-wrap: break-word;
    display: flex;
    flex-direction: row;
    align-items: center;
    line-height: 1.5;
    position: relative;
  }

  .cml-radio-selected {
    width: 32cpx;
    height: 32cpx;
    border-radius: 100cpx;
    box-sizing: border-box;
    border: 10px solid #fc9153;
  }

  .cml-radio-selected-disabled {
    width: 32cpx;
    height: 32cpx;
    border-radius: 100cpx;
    box-sizing: border-box;
    opacity: 0.5;
    border: 10px solid #fc9153;
  }

  .cml-radio-unselect {
    width: 32cpx;
    height: 32cpx;
    border: 1px solid #ccc;
    border-radius: 20cpx;
    box-sizing: border-box;
  }

  .cml-radio-unselect-disabled {
    width: 32cpx;
    height: 32cpx;
    border-radius: 20cpx;
    background-color: #ccc;
    box-sizing: border-box;
  }

  .cml-radio-label {
    color: #666;
    font-weight: 400;
    font-size: 32cpx;
  }
</style>
<script cml-type="json">
  {
    "base": {
      "component": true
    }
  }
</script>